name: Linux dotfiles build

on: [push]

jobs:
  test-master-script:
    name: Test master script
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run installation script
        run: |
          chmod +x install.linux.sh
          ./install.linux.sh

  test-create-directories:
    name: Test create directories
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run installation script
        run: |
          chmod +x ./scripts/create_directories.sh
          ./scripts/create_directories.sh

      - name: Test that the necessary directories exist
        run: |
          test -d $HOME/bin
          test -d $HOME/.ssh
          test -d $HOME/.ssh/config.d
          test -d $HOME/Documents
          test -d $HOME/github

  test-homebrew-installs:
    name: Test homebrew installation with packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run installation script
        run: |
          chmod +x ./scripts/install_linuxbrew.sh
          ./scripts/install_linuxbrew.sh

          chmod +x ./scripts/install_homebrew_packages.sh
          ./scripts/install_homebrew_packages.sh

  test-anaconda-install:
    name: Test that Anaconda Python is installed correctly
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run installation script
        run: |
          chmod +x ./scripts/install_anaconda-linux.sh
          ./scripts/install_anaconda-linux.sh

      - name: Test that conda is available and that it is a function.
        run: |
          source $HOME/anaconda/bin/activate
          OUTPUT=`type conda`
          grep -q "function" <<< $OUTPUT

  test-nanorc-install:
    name: Test that nanorc is installed correctly
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run installation script
        run: |
          chmod +x ./scripts/install_nanorc.sh
          ./scripts/install_nanorc.sh

      # https://www.cyberciti.biz/faq/howto-check-if-a-directory-exists-in-a-bash-shellscript/
      - name: Test that nanorc is installed correctly
        run: test -d $HOME/.nano

  test-heroku-install:
    name: Test that Heroku is installed correctly
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run installation script
        run: |
          chmod +x ./scripts/install_heroku-linux.sh
          ./scripts/install_heroku-linux.sh

      - name: Test that Heroku is installed
        run: type heroku

  test-ohmyzsh-install:
    name: Test that ohmyzsh is installed correctly
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install zsh
        run: |
          sudo apt-get update
          sudo apt-get install zsh

      - name: Run installation script
        run: |
          chmod +x ./scripts/install_ohmyzsh.sh
          ./scripts/install_ohmyzsh.sh

      - name: Test that oh-my-zsh is installed correctly
        run: |
          chmod +x ./tests/test_install_ohmyzsh.sh
          ./tests/test_install_ohmyzsh.sh

  test-install-dotfiles:
    name: Test that dotfiles are copied to the correct place.
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install zsh and cat
        run: |
          sudo apt-get update
          sudo apt-get install zsh

      - name: Diagnostic check of which zsh
        run: which zsh

      - name: Run installation for oh-my-zsh
        run: |
          chmod +x ./scripts/install_ohmyzsh.sh
          ./scripts/install_ohmyzsh.sh

      - name: Run installation script
        run: |
          chmod +x ./scripts/install_dotfiles.sh
          cat ./scripts/install_dotfiles.sh
          ./scripts/install_dotfiles.sh

      - name: Run tests for install_dotfiles
        run: |
          chmod +x tests/test_install_dotfiles.sh
          tests/test_install_dotfiles.sh
